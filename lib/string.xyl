func split(s, sep) {}

func join(sep, ss[]) {
  let result = "";
  let ss_len = len(ss);
  for (let i = 0; i < ss_len; i = i + 1) {
    if (i != 0)
      result = result + sep;
    result = result + ss[i];
  }
  return result;
}

func find(s, needle) {}

func replace(s, old, new) {}

func trim(s) {}

func startswith(s, prefix) {
  let prefix_len = len(prefix);
  if (prefix_len > len(s))
    return false;

  for (let i = 0; i < prefix_len; i = i + 1)
    if (s[i] != prefix[i])
      return false;
  return true;
}

func endswith(s, suffix) {
  let s_len = len(s);
  let suffix_len = len(suffix);
  if (suffix_len > s_len)
    return false;

  for (let i = s_len - 1; i > s_len - suffix_len; i = i - 1)
    if (s[i] != suffix[i])
      return false;
  return true;
}

func upper(s) {}

func lower(s) {}
