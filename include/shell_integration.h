#ifndef SHELL_INTEGRATION_H
#define SHELL_INTEGRATION_H

static const char *ZSH_INTEGRATION =
    "_xylia() {\n"
    "  local -a opts subcmds\n"
    "  local curcontext=\"$curcontext\" state line\n"
    "  typeset -A opt_args\n"
    "  opts=(\n"
    "    '(-h --help)'{-h,--help}'[Show this help message]'\n"
    "    '(-V --version)'{-V,--version}'[Show version information]'\n"
    "    '(-v --verbose)'{-v,--verbose}'[Enable verbose output]'\n"
    "    '(--zsh)'--zsh'[Print script to set up zsh shell integration]'\n"
    "    '(--bash)'--bash'[Print script to set up bash shell integration]'\n"
    "  )\n"
    "  subcmds=(\n"
    "    'run:Run a Xylia script file'\n"
    "    'repl:Start interactive REPL session'\n"
    "    'docs:Generate documentation from source files'\n"
    "    'help:Show this help message'\n"
    "    'version:Show version information'\n"
    "  )\n"
    "  _arguments -C \\\n"
    "    $opts \\\n"
    "    '1: :->subcmds' \\\n"
    "    '*::arg:->args'\n"
    "  case $state in\n"
    "    subcmds)\n"
    "      _describe 'subcommand' subcmds\n"
    "      ;;\n"
    "    args)\n"
    "      case $words[1] in\n"
    "        run)\n"
    "          _arguments \\\n"
    "            '1:file:_files -g \"*.xyl\"' \\\n"
    "            '*:args:'\n"
    "          ;;\n"
    "        docs)\n"
    "          _arguments \\\n"
    "            '1:input:_files -/' \\\n"
    "            '*:args:'\n"
    "          ;;\n"
    "        repl)\n"
    "          _message \"Starts an interactive REPL session\"\n"
    "          ;;\n"
    "        help|version)\n"
    "          _message \"No additional arguments\"\n"
    "          ;;\n"
    "        *)\n"
    "          _files -g \"*.xyl\"\n"
    "          ;;\n"
    "      esac\n"
    "    ;;\n"
    "  esac\n"
    "}\n"
    "compdef _xylia xylia\n";

static const char *BASH_INTEGRATION =
    "_xylia_completions() {\n"
    "  local cur prev subcmds opts files\n"
    "  COMPREPLY=()\n"
    "  cur=\"${COMP_WORDS[COMP_CWORD]}\"\n"
    "  prev=\"${COMP_WORDS[COMP_CWORD - 1]}\"\n"
    "\n"
    "  opts=\"--help -h --version -V --verbose -v --bash --zsh --bash\"\n"
    "  subcmds=\"run repl docs help version\"\n"
    "\n"
    "  if [[ ${COMP_CWORD} -eq 1 ]]; then\n"
    "    COMPREPLY=($(compgen -W \"${opts} ${subcmds}\" -- \"$cur\"))\n"
    "    return 0\n"
    "  fi\n"
    "\n"
    "  case \"${COMP_WORDS[1]}\" in\n"
    "  run)\n"
    "    COMPREPLY=($(compgen -f -X '!*.xyl' -- \"$cur\"))\n"
    "    ;;\n"
    "  docs)\n"
    "    COMPREPLY=($(compgen -d -- \"$cur\"))\n"
    "    ;;\n"
    "  repl | help | version)\n"
    "    COMPREPLY=()\n"
    "    ;;\n"
    "  *)\n"
    "    COMPREPLY=($(compgen -f -- \"$cur\"))\n"
    "    ;;\n"
    "  esac\n"
    "}\n"
    "\n"
    "complete -F _xylia_completions xylia\n";

#endif
